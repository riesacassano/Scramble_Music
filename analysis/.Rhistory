knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(readxl) # version 1.4.3
select <- dplyr::select # make sure we're using the dplyr version of select
raw_3A <- read_csv('../data/raw_combined_3A.csv', show_col_types = FALSE)
raw_3A <- read_csv('../data/raw_combined_3A.csv', show_col_types = FALSE)
getwd()
setwd(..)
setwd("/Users/rcassan2/Documents/GitHub/Scramble_Music/analysis/")
raw_3A <- read_csv('../data/raw_combined_3A.csv', show_col_types = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(readxl) # version 1.4.3
select <- dplyr::select # make sure we're using the dplyr version of select
getwd()
raw_3A <- read_csv('../data/raw_combined_3A.csv', show_col_types = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(readxl) # version 1.4.3
select <- dplyr::select # make sure we're using the dplyr version of select
raw_3A <- read_csv('../../data/raw_combined_3A.csv', show_col_types = FALSE)
raw_3A <- read_csv('../../data/E3/raw_combined_3A.csv', show_col_types = FALSE)
groups_3A <- read_excel('../../data/subject_info/E3A_sub_ids.xlsx')
addl_subs <- read_excel('../../data/primary/subs_additional_E3A.xlsx')
main_3A <- raw_3A %>%
filter(grepl('OpenEndedSeg',Task_Name)) %>%
# scramble level is in one of the following columns...
mutate(scramble = ifelse(!is.na(scramble_cat_4), scramble_cat_4,
ifelse(!is.na(scramble_level), scramble_level,
ifelse(!is.na(scramble_open_3), scramble_open_3, NA)))) %>%
select(c(exp_subject_id, Trial_Id, Task_Name, participant_spacePress2, scramble)) %>%
# add group info
left_join(., groups_3A, by = join_by('exp_subject_id')) %>%
relocate(Musician, .after = exp_subject_id) %>%
# subjects who are left out did stimulus set 2, which is highly overlapping with stimulus set 1
filter(!is.na(Musician))
main_3A <- addl_subs %>%
select(colnames(main_3A)) %>%
bind_rows(main_3A, .) %>%
# capitalize Intact
mutate(scramble = ifelse(scramble == 'intact', 'Intact', scramble))
main_3A %<>%
# the number in Task_Name encodes stimulus set
separate_wider_delim(Task_Name, delim = '_', names_sep = '_') %>% #, names = c(NULL, 'stimulus_set')) # not sure why this didn't work
mutate(Task_Name_1 = NULL) %>%
rename(stimulus_set = Task_Name_2) %>%
# keep only the actual timestamps from `space_press2`
# can't specify the column names in this step because there are some cells with NAs
separate_wider_delim(participant_spacePress2, delim = '---', names_sep = '_') %>%
mutate(participant_spacePress2_1 = NULL) %>%
rename(responses = participant_spacePress2_2) %>%
# transform response column into timestamp representation
# first, replace any NA rows with 'values="' so all trials with no responses are consistent
mutate(responses = ifelse(is.na(responses), 'values="', responses)) %>%
# give each timestamp its own row
separate_longer_delim(responses, delim = ';') %>%
# some responses have values=X instead of values=;X
separate_longer_delim(responses, delim = '=') %>%
filter(responses != '') %>%
filter(responses != '"') %>%
# rename column for analysis
rename(value = responses) %>%
# move scramble
relocate(scramble, .after = stimulus_set) %>%
# rename Trial_Id to be stim_num to be consistent with 3B
rename(stim_num = Trial_Id) %>%
relocate(stim_num, .after = scramble)
main_3A %>%
group_by(exp_subject_id) %>%
summarize(conds = unique(scramble)) %>%
summarize(n_conds = n())
# R isn't happy but that's ok
# looking at it another way...
main_3A %>%
group_by(exp_subject_id, scramble) %>%
summarize(stimuli = unique(stim_num)) %>%
group_by(exp_subject_id) %>%
summarize(n_trials = n())
rate_3A <- main_3A %>%
group_by(exp_subject_id, Musician, stimulus_set, scramble, stim_num) %>%
summarize(rate = ((n() - 1) / 64) * 60)
rate_3A %>%
filter(rate > 30)
rate_3A %<>%
group_by(exp_subject_id, Musician, stimulus_set, scramble) %>%
summarize(mean_response_rate = mean(rate)) #%>%
#filter(mean_response_rate < 30)
View(rate_3A)
main_3A %<>%
filter(value != 'values') %>%
mutate(value = str_replace(value, '"', '')) %>%
# convert from milliseconds to seconds
mutate(value = as.numeric(value) / 1000)
raw_3B <- read_csv('../../data/primary/raw_E3B.csv', show_col_types = FALSE)
main_3B <- raw_3B %>%
# filter the main task
# Block_Nr = 1 is before the main task: consent, instructions, headphone check, practice
# Block_Nr = 3 is the post-survey
filter(Block_Nr == '2') %>%
# keep only the necessary columns
# just want the responses from run 2, but add 'space_press1' here if you want to look at run 1 as well
select('Task_Name', 'space_press2', 'exp_subject_id') %>%
# move subject ID to the front
relocate('exp_subject_id') %>%
# any task name with a percent in it is a "strategy" question
filter(!grepl('%', Task_Name)) %>%
# separate condition and stimulus number
separate_wider_delim(Task_Name, delim = '_', names = c('scramble', 'stim_num')) %>%
# capitalize Intact
mutate(scramble = ifelse(scramble == 'intact', 'Intact', scramble)) %>%
# keep only the actual timestamps from `space_press2`
# can't specify the column names in this step because there are some cells with NAs
separate_wider_delim(space_press2, delim = '---', names_sep = '_') %>%
mutate(space_press2_1 = NULL) %>%
rename(responses = space_press2_2) #%>%
# before cleaning up this response column, check that each subject has complete data
#group_by(exp_subject_id) %>%
#summarize(count = n())
# all of the subject have 12 trials (complete), except for 377660 who isn't included in the subsetting later anyway
# list of subject IDs that match the musician criteria (either >5 years of experience or none at all)
# musicians (n = 13)
mus_sub_ids <- c(
'377647', '393320', '393267', '393245', '393246',
'393242', '393241', '393240', '393230', '393254',
'393252', '393249', '393239')
# non-musicians (n = 10)
non_mus_sub_ids <- c(
'377777', '377770', '377747', '377708', '377701',
'377692', '377665', '377664', '377663', '393253')
subset_3B <- main_3B %>%
# musician criteria
mutate(Musician = ifelse(exp_subject_id %in% mus_sub_ids, 'Yes',
ifelse(exp_subject_id %in% non_mus_sub_ids, 'No', NA))) %>%
relocate(Musician, .after = exp_subject_id) %>%
filter(!is.na(Musician)) %>%
# remove stimulus 2
filter(stim_num != '2')
zeroRate_3B <- subset_3B %>%
mutate(responses = ifelse(is.na(responses), 'values="', responses)) %>%
filter(responses == 'values="') %>%
mutate(rate = 0,
responses = NULL) %>%
# add stimulus set = 1 for when we combine
mutate(stimulus_set = 1, .after = Musician)
subset_3B %<>%
# transform response column into timestamp representation
# first, remove NA rows
filter(!is.na(responses)) %>%
# replace 'values=' and " with an empty string
mutate(responses = str_replace(responses, 'values=', '')) %>%
mutate(responses = str_replace(responses, '"', '')) %>%
# give each timestamp its own row
separate_longer_delim(responses, delim = ';') %>%
filter(responses != '') %>%
# convert from milliseconds to seconds
mutate(responses = as.numeric(responses) / 1000) %>%
# subsetting rules:
# when stim_num == 1, take all timestamps under 66 seconds
filter(!(stim_num == '1' & responses > 66)) %>%
# when stim_num == 3, take the last 66 seconds
# everything after 16 seconds for Intact (since Intact is 41m/82s)
filter(!(stim_num == '3' & scramble == 'Intact' & responses < 16)) %>%
# everything after 10 seconds for Intact (since 8B is 38m/76s)
filter(!(stim_num == '3' & scramble == '8B' & responses < 10)) %>%
# everything after 14 seconds for 2B (since 2B is 40m/80s)
filter(!(stim_num == '3' & scramble == '2B' & responses < 14)) %>%
# everything after 14 seconds for 1B (since 1B is 40m/80s)
filter(!(stim_num == '3' & scramble == '1B' & responses < 14)) %>%
# adjust timing for stim_num == 3 so it starts at 0 for all conditions
mutate(responses = ifelse(stim_num == 3, ifelse(
scramble == 'Intact', responses - 16, ifelse(
scramble == '8B', responses - 10, responses - 14
)), responses)) %>%
# check that nothing is below zero
#filter(responses < 0)
# rename column for analysis
rename(value = responses) %>%
# add stimulus set = 1 for when we combine
mutate(stimulus_set = 1, .after = Musician)
# each of these stimuli are 66 seconds, rate is expressed per minute
rate_3B <- subset_3B %>%
group_by(exp_subject_id, Musician, stimulus_set, scramble, stim_num) %>%
summarize(rate = (n() / 66) * 60) %>%
bind_rows(., zeroRate_3B)
rate_3B %<>%
# average over both runs for each subject
group_by(exp_subject_id, Musician, stimulus_set, scramble) %>%
summarize(mean_response_rate = mean(rate))
rate_3A$stimulus_set <- as.numeric(rate_3A$stimulus_set) # to match 3B
rate_combined <- bind_rows(rate_3A, rate_3B)
rate_combined %>% group_by(exp_subject_id) %>% summarize(count = n())
rate_combined %<>%
mutate(exp_subject_id = factor(exp_subject_id),
Musician = factor(Musician, levels = c('Yes', 'No')),
stimulus_set = factor(stimulus_set),
scramble = factor(scramble, levels = c('Intact', '8B', '2B', '1B'))
)
write_csv(rate_combined, '../../data/E3/response_rate_by_sub.csv')
# make numeric things numeric...
main_3A$stimulus_set <- as.numeric(main_3A$stimulus_set) # to match 3B
subset_3B$stim_num <- as.numeric(subset_3B$stim_num) # to match 3A
# combine
timestamps_combined <- bind_rows(main_3A, subset_3B)
write_csv(timestamps_combined, '../../data/E3/timestamps_filtered_long.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(brms) # version 2.22.0
library(bayestestR) # version 0.15.0
library(emmeans) # version 1.10.0
set.seed(15000)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(brms) # version 2.22.0
library(bayestestR) # version 0.15.0
library(emmeans) # version 1.10.0
set.seed(15000)
data <- read_csv('../data/E1-E2-E4/memory.csv')
data %<>%
mutate(exp_subject_id = as.factor(exp_subject_id),
response = ifelse(response == 'Correct', TRUE, FALSE),
scramble = factor(scramble, levels = c('8B', '2B', '1B')),
Musician = factor(Musician, levels = c('Yes', 'No'))) %>%
filter(!is.na(response))
contrasts(data$scramble) <- contr.treatment(3)
print(contrasts(data$scramble))
mus_scram <- brm(response ~ Musician + scramble + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus,
prior_scramble2B, prior_scramble1B),
save_pars = save_pars(all = TRUE), iter = 5000,
file = 'models/E1_mus_scram')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(brms) # version 2.22.0
library(bayestestR) # version 0.15.0
library(emmeans) # version 1.10.0
set.seed(15000)
data <- read_csv('../data/E1-E2-E4/memory.csv')
data %<>%
mutate(exp_subject_id = as.factor(exp_subject_id),
response = ifelse(response == 'Correct', TRUE, FALSE),
scramble = factor(scramble, levels = c('8B', '2B', '1B')),
Musician = factor(Musician, levels = c('Yes', 'No'))) %>%
filter(!is.na(response))
contrasts(data$scramble) <- contr.treatment(3)
print(contrasts(data$scramble))
prior_intercept <- set_prior('normal(log(0.8 / (1 - 0.8)), 1)', class = 'Intercept')
prior_mus <- set_prior('normal(-0.25, 1)', coef = 'Musician1')
prior_scramble2B <- set_prior('normal(-0.1, 1)', coef = 'scramble2')
prior_scramble1B <- set_prior('normal(-0.2, 1)', coef = 'scramble3')
prior_int2B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble2')
prior_int1B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble3')
mus_scram <- brm(response ~ Musician + scramble + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus,
prior_scramble2B, prior_scramble1B),
save_pars = save_pars(all = TRUE), iter = 5000,
file = 'models/E1_mus_scram')
plot(mus_scram)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(brms) # version 2.22.0
library(bayestestR) # version 0.15.0
library(emmeans) # version 1.10.0
set.seed(15000)
data <- read_csv('../data/E1-E2-E4/memory.csv')
data %<>%
mutate(exp_subject_id = as.factor(exp_subject_id),
response = ifelse(response == 'Correct', TRUE, FALSE),
scramble = factor(scramble, levels = c('8B', '2B', '1B')),
Musician = factor(Musician, levels = c('Yes', 'No'))) %>%
filter(!is.na(response))
contrasts(data$scramble) <- contr.treatment(3)
print(contrasts(data$scramble))
prior_intercept <- set_prior('normal(log(0.8 / (1 - 0.8)), 1)', class = 'Intercept')
prior_mus <- set_prior('normal(-0.25, 1)', coef = 'Musician1')
prior_scramble2B <- set_prior('normal(-0.1, 1)', coef = 'scramble2')
prior_scramble1B <- set_prior('normal(-0.2, 1)', coef = 'scramble3')
prior_int2B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble2')
prior_int1B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble3')
mus_scram <- brm(response ~ Musician + scramble + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus,
prior_scramble2B, prior_scramble1B),
save_pars = save_pars(all = TRUE), iter = 5000,
file = 'models/E1_mus_scram')
plot(mus_scram)
print(summary(mus_scram), digits = 4)
emm_mus_scram_s <- emmeans(mus_scram, specs = "scramble")
summary(emm_mus_scram_s)
contrast(emm_mus_scram_s, method = "pairwise")
emm_mus_scram_ms <- emmeans(mus_scram, specs = c("Musician", "scramble"))
summary(emm_mus_scram_ms)
contrast(emm_mus_scram_ms, method = "pairwise")
main_BF <- describe_posterior(mus_scram,
estimate = "median", dispersion = TRUE,
ci = .95, ci_method = "HDI",
test = c("bayes_factor"))
print(main_BF, digits = 4)
mus_only <- brm(response ~ Musician + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus),
save_pars = save_pars(all = TRUE), iter = 5000,
file = 'models/E1_mus_only')
plot(mus_only)
print(summary(mus_only), digits = 4)
BF_scramble <- bayes_factor(mus_scram, mus_only)
print(BF_scramble)
library(caret) # version 6.0-94
library(tidyverse) # version 2.0.0
library(reshape2) # version 1.4.4
# data are hard-coded from '../data/primary/dataConfuseMatrix.xlsx'
#Nonmusicians
expected_value_nonMus <- factor(c(1, 4, 3,	3,	4,	1,	2,	2,	4,	4,	3,	3,	1,	1,	2,	2,	2,	1,	4,	3,	3,	4,	1,	2,	3,	2,	3,	1,	1,	4,	4,	2,	1,	3,	1,	3,	4,	3,	3,	2,	4,	3,	1,	1,	4,	1,	4,	3,	3,	2,	2,	4,	3,	3,	2,	4,	1,	1,	4,	3,	4,	2,	2,	3,	1,	1,	3,	4,	4,	1,	1,	3,	2,	2,	3,	1,	3,	4,	2,	4,	1,	1,	4,	1,	4,	2,	2,	3,	3,	1,	2,	3,	1,	4,	2,	3,	4,	3,	4,	1,	4,	3,	2,	2,	1,	3,	4,	2,	4,	1,	3,	2,	1,	1,	4,	4,	2,	3,	1,	2,	3,	2,	4,	3,	4,	1,	4,	1,	3,	2,	3,	4,	2,	4,	4,	1,	2,	2,	1,	3,	3,	4,	1,	4,	1,	3,	3,	2,	2,	4,	1,	1,	4,	2,	2,	3,	3,	4,	3,	4,	3,	1,	1,	2,	2,	3,	4,	4,	2,	1,	3,	1,	2,	4,	1,	3,	1,	3,	2,	2,	4,	4,	1,	4,	1,	3,	2,	2,	2,	4,	1,	1,	2,	4,	3,	3,	3,	1,	4,	3,	2,	2,	1,	1,	1,	2,	4,	2,	4,	3,	3,	4,	3,	3,	1,	4,	1,	2,	2,	3,	3,	2,	1,	4,	1,	4,	2,	3,	1,	4,	4,	2,	3,	2,	1,	4,	2,	3,	1,	3,	2,	4,	1,	1,	2,	4,	3,	2,	1,	1,	2,	1,	2,	3,	4,	4,	3,	2,	1,	4,	1,	4,	3,	3,	4,	1,	3,	2,	3,	4,	2,	3,	4,	3,	4,	2,	2,	1,	1,	1,	3,	4,	1,	2,	2,	3,	4,	3,	4,	2,	4,	1,	1,	1,	2,	2,	1,	4,	3,	4,	3,	4,	3,	4,	1,	2,	1,	2,	3,	2,	3,	3,	1,	4,	1,	4,	2,	4,	4,	2,	1,	3,	1,	3,	2,	3,	2,	1,	4,	1,	3,	4,	1,	2,	1,	3,	4,	3,	4,	2,	4,	3,	3,	1,	1,	2,	2,	4,	2,	2,	1,	1,	4,	4,	3,	2,	4,	4,	1,	2,	1,	3,	3,	1,	1,	2,	4,	3,	2,	3,	4,	4,	4,	2,	1,	2,	3,	3,	1,	1,	2,	2,	1,	3,	3,	4,	4,	4,	1,	4,	1,	3,	3,	2,	2,	2,	3,	4,	4,	3,	1,	3,	4,	2,	3,	1,	2 ,1))
predicted_value_nonMus <- factor(c(2,	1,	2,	3,	4,	3,	3,	3,	3,	1,	2,	3,	3,	2,	3,	2,	2,	3,	1,	3,	3,	4,	2,	4,	3,	2,	3,	1,	1,	3,	4,	4,	4,	1,	2,	3,	1,	3,	2,	3,	3,	2,	2,	2,	1,	2,	1,	2,	3,	2,	2,	2,	1,	2,	2,	2,	3,	4,	3,	2,	2,	3,	1,	2,	3,	1,	2,	3,	2,	3,	3,	2,	1,	2,	3,	2,	3,	4,	2,	4,	1,	1,	1,	2,	3,	2,	1,	1,	1,	2,	1,	1,	2,	1,	3,	3,	2,	1,	3,	1,	2,	4,	1,	2,	2,	3,	3,	3,	1,	2,	4,	4,	3,	3,	2,	3,	1,	4,	3,	4,	4,	3,	4,	3,	2,	2,	2,	3,	3,	2,	3,	3,	4,	4,	3,	3,	3,	2,	1,	3,	3,	1,	3,	2,	3,	2,	1,	4,	2,	2,	3,	1,	2,	3,	3,	2,	2,	4,	3,	2,	2,	2,	2,	2,	1,	2,	4,	3,	1,	2,	3,	1,	2,	3,	2,	2,	1,	1,	1,	2,	4,	4,	2,	4,	2,	3,	4,	2,	2,	2,	4,	4,	4,	4,	4,	2,	3,	4,	3,	4,	3,	3,	1,	2,	1,	2,	1,	2,	3,	3,	3,	2,	2,	3,	2,	3,	1,	3,	2,	2,	3,	2,	4,	2,	3,	3,	2,	4,	3,	4,	3,	2,	2,	2,	2,	3,	2,	3,	2,	2,	1,	2,	1,	4,	3,	2,	4,	4,	4,	2,	2,	3,	1,	3,	2,	2,	1,	3,	2,	2,	2,	3,	1,	3,	2,	3,	3,	2,	3,	3,	4,	3,	1,	2,	4,	1,	2,	1,	1,	3,	3,	2,	3,	2,	1,	1,	2,	3,	3,	2,	3,	3,	2,	1,	3,	2,	1,	4,	3,	4,	4,	2,	2,	2,	4,	3,	2,	4,	4,	3,	4,	4,	4,	3,	2,	3,	2,	2,	1,	2,	1,	3,	2,	4,	2,	3,	4,	4,	2,	2,	2,	4,	2,	3,	1,	2,	3,	3,	3,	3,	4,	3,	3,	1,	2,	2,	3,	4,	1,	3,	2,	1,	3,	2,	1,	2,	4,	4,	1,	1,	2,	3,	3,	2,	2,	1,	3,	3,	2,	1,	1,	2,	2,	3,	1,	3,	3,	3,	3,	2,	3,	2,	4,	4,	2,	4,	4,	4,	1,	4,	2,	3,	4,	1,	1,	3,	2,	4,	4,	3,	3,	3,	2,	1,	2,	4,	2,	1))
#Creating confusion matrix
confusionSeg_nonMus <- confusionMatrix(data=predicted_value_nonMus, reference = expected_value_nonMus)
#Display results
confusionSeg_nonMus
matrix_nonMus <- confusionSeg_nonMus$table
#Musicians
expected_value_mus <- factor(c(2,	1,	1,	3,	3,	4,	4,	4,	3,	2,	4,	1,	2,	1,	3,	3,	1,	2,	4,	1,	4,	3,	2,	1,	4,	2,	4,	1,	3,	2,	3,	3,	2,	1,	2,	3,	4,	1,	4,	3,	1,	1,	2,	4,	2,	4,	3,	3,	2,	2,	4,	1,	3,	1,	4,	4,	4,	3,	2,	1,	2,	1,	2,	2,	3,	3,	1,	1,	4,	4,	4,	3,	4,	2,	1,	2,	3,	1,	2,	1,	2,	3,	1,	4,	4,	3,	4,	1,	4,	3,	3,	1,	2,	2,	2,	1,	3,	1,	4,	4,	3,	2,	3,	1,	1,	2,	3,	2,	4,	4,	3,	1,	4,	1,	2,	2,	3,	1,	4,	2,	1,	3,	4,	3,	2,	4,	3,	4,	3,	2,	1,	1,	2,	1,	2,	2,	1,	4,	4,	3,	3,	1,	4,	4,	1,	2,	2,	3,	3,	3,	1,	1,	3,	4,	2,	4,	2,	4,	3,	1,	3,	4,	1,	2,	4,	1,	2,	1,	4,	2,	3,	3,	1,	2,	4,	3,	2,	3,	1,	2,	2,	3,	4,	1,	4,	1,	3,	2,	3,	4,	1,	1,	2,	4,	2,	3,	1,	2,	4,	3,	1,	4,	3,	3,	1,	2,	1,	4,	4,	2,	4,	1,	3,	3,	2,	2,	4,	1,	3,	4,	4,	2,	2,	1,	1,	3,	2,	3,	4,	1,	4,	2,	3,	1,	1,	4,	1,	2,	3,	4,	2,	1,	4,	2,	3,	3,	1,	4,	4,	1,	1,	4,	3,	2,	2,	3,	2,	2,	3,	1,	4,	4,	1,	4,	1,	4,	2,	2,	1,	3,	3,	2,	2,	4,	1,	3,	3,	1,	4,	3,	1,	4,	2,	1,	3,	2,	4,	4,	3,	1,	3,	4,	1,	2,	2,	3,	1,	4,	3,	2,	2,	4,	1,	1,	4,	3,	2,	3,	1,	2,	4,	4,	4,	1,	3,	1,	3,	2,	2,	1,	4,	3,	2,	1,	3,	4,	2,	1,	4,	4,	2,	1,	3,	2,	3,	1,	1,	4,	3,	4,	2,	2,	3,	4,	4,	1,	3,	2,	2,	1,	3,	2,	3,	2,	1,	4,	4,	1,	3,	4,	2,	3,	1,	4,	3,	1,	2,	2,	4,	2,	1,	3,	1,	4,	3,	1,	3,	4,	1,	2,	4,	3,	2,	2,	1,	2,	1,	3,	4,	3,	4,	1,	3,	2,	1,	3,	4,	2,	4,	3,	3,	4,	4,	2,	1,	1,	2,	3,	2,	2,	3,	4,	1,	1,	4,	1,	2,	3,	1,	3,	4,	2,	4))
predicted_value_mus <- factor(c(3,	4,	3,	4,	2,	1,	3,	2,	3,	2,	2,	2,	3,	2,	2,	2,	2,	3,	3,	2,	3,	3,	3,	3,	4,	2,	3,	1,	4,	1,	3,	2,	2,	3,	2,	2,	2,	3,	2,	3,	2,	4,	2,	4,	2,	4,	3,	3,	2,	3,	4,	1,	3,	2,	4,	3,	4,	3,	2,	1,	2,	1,	3,	2,	3,	3,	1,	1,	4,	4,	3,	3,	4,	2,	1,	2,	2,	2,	2,	2,	2,	3,	2,	4,	1,	3,	2,	4,	3,	2,	2,	4,	3,	3,	3,	1,	3,	2,	3,	3,	3,	2,	2,	1,	3,	1,	2,	1,	3,	1,	3,	1,	3,	1,	2,	1,	2,	3,	4,	2,	1,	3,	4,	4,	2,	1,	2,	2,	2,	2,	1,	1,	2,	2,	2,	2,	2,	2,	1,	1,	1,	4,	2,	3,	4,	3,	2,	4,	2,	3,	3,	2,	4,	4,	1,	4,	2,	4,	3,	2,	3,	4,	1,	2,	3,	2,	1,	3,	1,	3,	2,	3,	3,	2,	2,	3,	3,	2,	2,	4,	3,	1,	2,	3,	3,	3,	3,	2,	3,	4,	2,	2,	1,	4,	2,	3,	1,	2,	3,	4,	2,	4,	2,	3,	1,	2,	2,	1,	4,	4,	4,	2,	3,	3,	2,	2,	4,	1,	3,	4,	3,	2,	3,	2,	1,	3,	2,	4,	4,	2,	4,	2,	3,	1,	2,	4,	3,	2,	3,	4,	3,	1,	4,	2,	4,	3,	1,	4,	3,	1,	1,	3,	3,	2,	2,	3,	2,	4,	4,	1,	4,	4,	2,	4,	2,	4,	2,	2,	1,	4,	3,	2,	1,	2,	1,	1,	2,	2,	1,	1,	2,	1,	2,	2,	3,	2,	4,	2,	3,	2,	3,	3,	1,	2,	2,	4,	2,	3,	3,	2,	2,	4,	1,	3,	3,	2,	2,	2,	3,	2,	4,	4,	4,	2,	3,	1,	4,	2,	2,	1,	2,	3,	2,	1,	3,	4,	1,	2,	4,	3,	1,	1,	3,	2,	3,	4,	2,	4,	4,	4,	3,	2,	3,	3,	3,	1,	3,	2,	2,	1,	3,	2,	3,	4,	2,	2,	4,	3,	3,	1,	3,	4,	1,	2,	3,	1,	1,	2,	1,	2,	4,	2,	2,	1,	4,	2,	1,	3,	2,	3,	1,	2,	2,	2,	3,	2,	1,	2,	3,	2,	3,	1,	3,	3,	2,	2,	2,	1,	1,	1,	2,	1,	2,	4,	3,	1,	1,	2,	2,	1,	3,	2,	1,	1,	2,	2,	2,	3,	1,	3,	1,	2,	3))
#Creating confusion matrix
confusionSeg_mus <- confusionMatrix(data=predicted_value_mus, reference = expected_value_mus)
#Display results
confusionSeg_mus
matrix_mus <- confusionSeg_mus$table
max_value <- max(matrix_nonMus, matrix_mus)
#Heatmap
x_labels <- c("1B", "2B", "8B", "Intact")
y_labels <- c("1B", "2B", "8B", "Intact")
#nonmusicians
heatmap_df <- melt(matrix_nonMus)
num_cols <- ncol(heatmap_df)
num_rows <- nrow(heatmap_df)
ggplot(heatmap_df, aes(x = Prediction, y = Reference, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "purple", limits = c(0, max_value), name = "Count") +
labs(title = "Confusion Matrix - Non-musicians", x = "Participant Response", y = "True Category") +
scale_x_continuous(breaks = seq_along(x_labels), labels = x_labels) +
scale_y_continuous(breaks = seq_along(y_labels), labels = y_labels)
#musicians
heatmap_df_mus <- melt(matrix_mus)
ggplot(heatmap_df_mus, aes(x = Prediction, y = Reference, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "purple", limits = c(0, max_value), name = "Count") +
labs(title = "Confusion Matrix - Musicians", x = "Participant Response", y = "True Category") +
scale_x_continuous(breaks = seq_along(x_labels), labels = x_labels) +
scale_y_continuous(breaks = seq_along(y_labels), labels = y_labels)
#ggsave('../figures/Fig6B_confusion_matrix_musicians.png', width = 5, he
library(caret) # version 6.0-94
library(tidyverse) # version 2.0.0
library(reshape2) # version 1.4.4
# data are hard-coded from '../data/primary/dataConfuseMatrix.xlsx'
#Nonmusicians
expected_value_nonMus <- factor(c(1, 4, 3,	3,	4,	1,	2,	2,	4,	4,	3,	3,	1,	1,	2,	2,	2,	1,	4,	3,	3,	4,	1,	2,	3,	2,	3,	1,	1,	4,	4,	2,	1,	3,	1,	3,	4,	3,	3,	2,	4,	3,	1,	1,	4,	1,	4,	3,	3,	2,	2,	4,	3,	3,	2,	4,	1,	1,	4,	3,	4,	2,	2,	3,	1,	1,	3,	4,	4,	1,	1,	3,	2,	2,	3,	1,	3,	4,	2,	4,	1,	1,	4,	1,	4,	2,	2,	3,	3,	1,	2,	3,	1,	4,	2,	3,	4,	3,	4,	1,	4,	3,	2,	2,	1,	3,	4,	2,	4,	1,	3,	2,	1,	1,	4,	4,	2,	3,	1,	2,	3,	2,	4,	3,	4,	1,	4,	1,	3,	2,	3,	4,	2,	4,	4,	1,	2,	2,	1,	3,	3,	4,	1,	4,	1,	3,	3,	2,	2,	4,	1,	1,	4,	2,	2,	3,	3,	4,	3,	4,	3,	1,	1,	2,	2,	3,	4,	4,	2,	1,	3,	1,	2,	4,	1,	3,	1,	3,	2,	2,	4,	4,	1,	4,	1,	3,	2,	2,	2,	4,	1,	1,	2,	4,	3,	3,	3,	1,	4,	3,	2,	2,	1,	1,	1,	2,	4,	2,	4,	3,	3,	4,	3,	3,	1,	4,	1,	2,	2,	3,	3,	2,	1,	4,	1,	4,	2,	3,	1,	4,	4,	2,	3,	2,	1,	4,	2,	3,	1,	3,	2,	4,	1,	1,	2,	4,	3,	2,	1,	1,	2,	1,	2,	3,	4,	4,	3,	2,	1,	4,	1,	4,	3,	3,	4,	1,	3,	2,	3,	4,	2,	3,	4,	3,	4,	2,	2,	1,	1,	1,	3,	4,	1,	2,	2,	3,	4,	3,	4,	2,	4,	1,	1,	1,	2,	2,	1,	4,	3,	4,	3,	4,	3,	4,	1,	2,	1,	2,	3,	2,	3,	3,	1,	4,	1,	4,	2,	4,	4,	2,	1,	3,	1,	3,	2,	3,	2,	1,	4,	1,	3,	4,	1,	2,	1,	3,	4,	3,	4,	2,	4,	3,	3,	1,	1,	2,	2,	4,	2,	2,	1,	1,	4,	4,	3,	2,	4,	4,	1,	2,	1,	3,	3,	1,	1,	2,	4,	3,	2,	3,	4,	4,	4,	2,	1,	2,	3,	3,	1,	1,	2,	2,	1,	3,	3,	4,	4,	4,	1,	4,	1,	3,	3,	2,	2,	2,	3,	4,	4,	3,	1,	3,	4,	2,	3,	1,	2 ,1))
predicted_value_nonMus <- factor(c(2,	1,	2,	3,	4,	3,	3,	3,	3,	1,	2,	3,	3,	2,	3,	2,	2,	3,	1,	3,	3,	4,	2,	4,	3,	2,	3,	1,	1,	3,	4,	4,	4,	1,	2,	3,	1,	3,	2,	3,	3,	2,	2,	2,	1,	2,	1,	2,	3,	2,	2,	2,	1,	2,	2,	2,	3,	4,	3,	2,	2,	3,	1,	2,	3,	1,	2,	3,	2,	3,	3,	2,	1,	2,	3,	2,	3,	4,	2,	4,	1,	1,	1,	2,	3,	2,	1,	1,	1,	2,	1,	1,	2,	1,	3,	3,	2,	1,	3,	1,	2,	4,	1,	2,	2,	3,	3,	3,	1,	2,	4,	4,	3,	3,	2,	3,	1,	4,	3,	4,	4,	3,	4,	3,	2,	2,	2,	3,	3,	2,	3,	3,	4,	4,	3,	3,	3,	2,	1,	3,	3,	1,	3,	2,	3,	2,	1,	4,	2,	2,	3,	1,	2,	3,	3,	2,	2,	4,	3,	2,	2,	2,	2,	2,	1,	2,	4,	3,	1,	2,	3,	1,	2,	3,	2,	2,	1,	1,	1,	2,	4,	4,	2,	4,	2,	3,	4,	2,	2,	2,	4,	4,	4,	4,	4,	2,	3,	4,	3,	4,	3,	3,	1,	2,	1,	2,	1,	2,	3,	3,	3,	2,	2,	3,	2,	3,	1,	3,	2,	2,	3,	2,	4,	2,	3,	3,	2,	4,	3,	4,	3,	2,	2,	2,	2,	3,	2,	3,	2,	2,	1,	2,	1,	4,	3,	2,	4,	4,	4,	2,	2,	3,	1,	3,	2,	2,	1,	3,	2,	2,	2,	3,	1,	3,	2,	3,	3,	2,	3,	3,	4,	3,	1,	2,	4,	1,	2,	1,	1,	3,	3,	2,	3,	2,	1,	1,	2,	3,	3,	2,	3,	3,	2,	1,	3,	2,	1,	4,	3,	4,	4,	2,	2,	2,	4,	3,	2,	4,	4,	3,	4,	4,	4,	3,	2,	3,	2,	2,	1,	2,	1,	3,	2,	4,	2,	3,	4,	4,	2,	2,	2,	4,	2,	3,	1,	2,	3,	3,	3,	3,	4,	3,	3,	1,	2,	2,	3,	4,	1,	3,	2,	1,	3,	2,	1,	2,	4,	4,	1,	1,	2,	3,	3,	2,	2,	1,	3,	3,	2,	1,	1,	2,	2,	3,	1,	3,	3,	3,	3,	2,	3,	2,	4,	4,	2,	4,	4,	4,	1,	4,	2,	3,	4,	1,	1,	3,	2,	4,	4,	3,	3,	3,	2,	1,	2,	4,	2,	1))
#Creating confusion matrix
confusionSeg_nonMus <- confusionMatrix(data=predicted_value_nonMus, reference = expected_value_nonMus)
#Display results
confusionSeg_nonMus
matrix_nonMus <- confusionSeg_nonMus$table
#Musicians
expected_value_mus <- factor(c(2,	1,	1,	3,	3,	4,	4,	4,	3,	2,	4,	1,	2,	1,	3,	3,	1,	2,	4,	1,	4,	3,	2,	1,	4,	2,	4,	1,	3,	2,	3,	3,	2,	1,	2,	3,	4,	1,	4,	3,	1,	1,	2,	4,	2,	4,	3,	3,	2,	2,	4,	1,	3,	1,	4,	4,	4,	3,	2,	1,	2,	1,	2,	2,	3,	3,	1,	1,	4,	4,	4,	3,	4,	2,	1,	2,	3,	1,	2,	1,	2,	3,	1,	4,	4,	3,	4,	1,	4,	3,	3,	1,	2,	2,	2,	1,	3,	1,	4,	4,	3,	2,	3,	1,	1,	2,	3,	2,	4,	4,	3,	1,	4,	1,	2,	2,	3,	1,	4,	2,	1,	3,	4,	3,	2,	4,	3,	4,	3,	2,	1,	1,	2,	1,	2,	2,	1,	4,	4,	3,	3,	1,	4,	4,	1,	2,	2,	3,	3,	3,	1,	1,	3,	4,	2,	4,	2,	4,	3,	1,	3,	4,	1,	2,	4,	1,	2,	1,	4,	2,	3,	3,	1,	2,	4,	3,	2,	3,	1,	2,	2,	3,	4,	1,	4,	1,	3,	2,	3,	4,	1,	1,	2,	4,	2,	3,	1,	2,	4,	3,	1,	4,	3,	3,	1,	2,	1,	4,	4,	2,	4,	1,	3,	3,	2,	2,	4,	1,	3,	4,	4,	2,	2,	1,	1,	3,	2,	3,	4,	1,	4,	2,	3,	1,	1,	4,	1,	2,	3,	4,	2,	1,	4,	2,	3,	3,	1,	4,	4,	1,	1,	4,	3,	2,	2,	3,	2,	2,	3,	1,	4,	4,	1,	4,	1,	4,	2,	2,	1,	3,	3,	2,	2,	4,	1,	3,	3,	1,	4,	3,	1,	4,	2,	1,	3,	2,	4,	4,	3,	1,	3,	4,	1,	2,	2,	3,	1,	4,	3,	2,	2,	4,	1,	1,	4,	3,	2,	3,	1,	2,	4,	4,	4,	1,	3,	1,	3,	2,	2,	1,	4,	3,	2,	1,	3,	4,	2,	1,	4,	4,	2,	1,	3,	2,	3,	1,	1,	4,	3,	4,	2,	2,	3,	4,	4,	1,	3,	2,	2,	1,	3,	2,	3,	2,	1,	4,	4,	1,	3,	4,	2,	3,	1,	4,	3,	1,	2,	2,	4,	2,	1,	3,	1,	4,	3,	1,	3,	4,	1,	2,	4,	3,	2,	2,	1,	2,	1,	3,	4,	3,	4,	1,	3,	2,	1,	3,	4,	2,	4,	3,	3,	4,	4,	2,	1,	1,	2,	3,	2,	2,	3,	4,	1,	1,	4,	1,	2,	3,	1,	3,	4,	2,	4))
predicted_value_mus <- factor(c(3,	4,	3,	4,	2,	1,	3,	2,	3,	2,	2,	2,	3,	2,	2,	2,	2,	3,	3,	2,	3,	3,	3,	3,	4,	2,	3,	1,	4,	1,	3,	2,	2,	3,	2,	2,	2,	3,	2,	3,	2,	4,	2,	4,	2,	4,	3,	3,	2,	3,	4,	1,	3,	2,	4,	3,	4,	3,	2,	1,	2,	1,	3,	2,	3,	3,	1,	1,	4,	4,	3,	3,	4,	2,	1,	2,	2,	2,	2,	2,	2,	3,	2,	4,	1,	3,	2,	4,	3,	2,	2,	4,	3,	3,	3,	1,	3,	2,	3,	3,	3,	2,	2,	1,	3,	1,	2,	1,	3,	1,	3,	1,	3,	1,	2,	1,	2,	3,	4,	2,	1,	3,	4,	4,	2,	1,	2,	2,	2,	2,	1,	1,	2,	2,	2,	2,	2,	2,	1,	1,	1,	4,	2,	3,	4,	3,	2,	4,	2,	3,	3,	2,	4,	4,	1,	4,	2,	4,	3,	2,	3,	4,	1,	2,	3,	2,	1,	3,	1,	3,	2,	3,	3,	2,	2,	3,	3,	2,	2,	4,	3,	1,	2,	3,	3,	3,	3,	2,	3,	4,	2,	2,	1,	4,	2,	3,	1,	2,	3,	4,	2,	4,	2,	3,	1,	2,	2,	1,	4,	4,	4,	2,	3,	3,	2,	2,	4,	1,	3,	4,	3,	2,	3,	2,	1,	3,	2,	4,	4,	2,	4,	2,	3,	1,	2,	4,	3,	2,	3,	4,	3,	1,	4,	2,	4,	3,	1,	4,	3,	1,	1,	3,	3,	2,	2,	3,	2,	4,	4,	1,	4,	4,	2,	4,	2,	4,	2,	2,	1,	4,	3,	2,	1,	2,	1,	1,	2,	2,	1,	1,	2,	1,	2,	2,	3,	2,	4,	2,	3,	2,	3,	3,	1,	2,	2,	4,	2,	3,	3,	2,	2,	4,	1,	3,	3,	2,	2,	2,	3,	2,	4,	4,	4,	2,	3,	1,	4,	2,	2,	1,	2,	3,	2,	1,	3,	4,	1,	2,	4,	3,	1,	1,	3,	2,	3,	4,	2,	4,	4,	4,	3,	2,	3,	3,	3,	1,	3,	2,	2,	1,	3,	2,	3,	4,	2,	2,	4,	3,	3,	1,	3,	4,	1,	2,	3,	1,	1,	2,	1,	2,	4,	2,	2,	1,	4,	2,	1,	3,	2,	3,	1,	2,	2,	2,	3,	2,	1,	2,	3,	2,	3,	1,	3,	3,	2,	2,	2,	1,	1,	1,	2,	1,	2,	4,	3,	1,	1,	2,	2,	1,	3,	2,	1,	1,	2,	2,	2,	3,	1,	3,	1,	2,	3))
#Creating confusion matrix
confusionSeg_mus <- confusionMatrix(data=predicted_value_mus, reference = expected_value_mus)
#Display results
confusionSeg_mus
matrix_mus <- confusionSeg_mus$table
max_value <- max(matrix_nonMus, matrix_mus)
#Heatmap
x_labels <- c("1B", "2B", "8B", "Intact")
y_labels <- c("1B", "2B", "8B", "Intact")
#nonmusicians
heatmap_df <- melt(matrix_nonMus)
num_cols <- ncol(heatmap_df)
num_rows <- nrow(heatmap_df)
ggplot(heatmap_df, aes(x = Prediction, y = Reference, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "purple", limits = c(0, max_value), name = "Count") +
labs(title = "Confusion Matrix - Non-musicians", x = "Participant Response", y = "True Category") +
scale_x_continuous(breaks = seq_along(x_labels), labels = x_labels) +
scale_y_continuous(breaks = seq_along(y_labels), labels = y_labels)
ggsave('../figures/Fig6A_confusion_matrix_nonmusicians.png', width = 5, height = 4.5)
#musicians
heatmap_df_mus <- melt(matrix_mus)
ggplot(heatmap_df_mus, aes(x = Prediction, y = Reference, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "purple", limits = c(0, max_value), name = "Count") +
labs(title = "Confusion Matrix - Musicians", x = "Participant Response", y = "True Category") +
scale_x_continuous(breaks = seq_along(x_labels), labels = x_labels) +
scale_y_continuous(breaks = seq_along(y_labels), labels = y_labels)
ggsave('../figures/Fig6B_confusion_matrix_musicians.png', width = 5, height = 4.5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(rstatix) # version 0.7.2
library(brms) # version 2.22.0
library(bayestestR) # version 0.15.0
library(emmeans) # version 1.10.0
set.seed(15000)
data <- read_csv("../data/E3/response_rate_by_sub.csv")
data %<>% mutate(Musician = factor(Musician, levels = c('Yes', 'No')),
scramble = factor(scramble, levels = c('Intact', '8B', '2B', '1B')))
contrasts(data$scramble) <- contr.treatment(4)
data %>%
group_by(Musician, scramble) %>%
shapiro_test(mean_response_rate)
data %>%
ggplot(aes(x = scramble, y = mean_response_rate, fill = Musician)) +
geom_bar(position = "dodge", stat = "summary", fun = mean) +
geom_errorbar(position = position_dodge(width = 0.9), width = 0.2, stat = "summary") +
geom_point(position = position_jitterdodge(jitter.width = 0.1), alpha = 0.1) +
theme_gray(base_size = 16) +
xlab('Scramble Level') +
ylab('Response Rate (per Minute)') +
scale_fill_discrete(name="", labels=c('Musicians', 'Non-musicians')) +
theme(legend.text = element_text(size = 12))
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
library(tidyverse)
library(magrittr)
data_Intact <- read_csv('../data/stimulus_info_E3/pitch_rhythm_resp_Intact.csv', show_col_types = FALSE)
data_8B <- read_csv('../data/stimulus_info_E3/pitch_rhythm_resp_8B.csv', show_col_types = FALSE)
data_2B <- read_csv('../data/stimulus_info_E3/pitch_rhythm_resp_2B.csv', show_col_types = FALSE)
data_1B <- read_csv('../data/stimulus_info_E3/pitch_rhythm_resp_1B.csv', show_col_types = FALSE)

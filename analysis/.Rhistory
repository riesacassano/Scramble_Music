knitr::opts_chunk$set(echo = FALSE, message = FALSE)
library(tidyverse)
library(magrittr)
data <- as_tibble(read_csv('../feature_differences_joined.csv',
show_col_types=FALSE))
data <- as_tibble(read_csv('../data/feature_differences_joined.csv',
show_col_types=FALSE))
head(data)
# extract the data for originals first
data_orig <- data %>%
# grab the columns with data about the originals
select(song, orig_tempo, orig_key, orig_F, orig_M,
mean_val_orig, sd_val_orig, mean_arous_orig, sd_arous_orig) %>%
# repair names to make them consistent across dataframes
rename(
tempo = orig_tempo,
key = orig_key,
f_voc = orig_F,
m_voc = orig_M,
mean_val = mean_val_orig,
sd_val = sd_val_orig,
mean_arous = mean_arous_orig,
sd_arous = sd_arous_orig
) %>%
# create a column to mark these rows as originals
mutate(orig_or_cover = 'orig')
# now extract the data for covers
data_covers <- data %>%
# grab the columns with data about the originals
select(song, cover_category,
cover_tempo, cover_key, cover_F, cover_M,
mean_val_cover, sd_val_cover, mean_arous_cover, sd_arous_cover) %>%
# repair names to make them consistent across dataframes
rename(
tempo = cover_tempo,
key = cover_key,
f_voc = cover_F,
m_voc = cover_M,
mean_val = mean_val_cover,
sd_val = sd_val_cover,
mean_arous = mean_arous_cover,
sd_arous = sd_arous_cover
) %>%
# create a column to mark these rows as originals
mutate(orig_or_cover = 'cover')
data_long <- data_covers %>%
select(-cover_category) %>%
rbind(data_orig, .) %>%
relocate(orig_or_cover, .after = song)
head(data_long)
View(data_long)
# make cover category a categorical variable
category_labels <- c('like original', 'acoustic',
'rock/metal', 'jazz/vintage', 'latin',
'country', 'a cappella')
data_covers$cover_category <- factor(data_covers$cover_category,
levels = seq(1,7))
ggplot(data_covers, aes(x = cover_category, y = tempo)) +
geom_jitter(width = 0.1) +
scale_x_discrete(labels = category_labels) +
xlab('cover category')
#ggsave('tempo/tempo_exploration/tempo_by_category.png', width = 7, height = 5)
summary(lm(tempo ~ factor(cover_category), data_covers))
gender_count_by_category <- data %>%
group_by(gender_diff, cover_category) %>%
summarize(count = n())
ggplot(gender_count_by_category, aes(x = cover_category, y = count,
fill = factor(gender_diff))) +
geom_col() +
scale_x_continuous(breaks = seq(1,7), labels = category_labels) +
scale_fill_discrete(name = 'gender difference',
labels = c('0: no difference', '1: add opposite', '2: switch')) +
xlab('cover category')
#ggsave('gender/gender_exploration/gender_diff_by_category.png', width = 7, height = 5)
ggplot(data, aes(x = cover_category, y = mfccs_dist)) +
geom_jitter(width = 0.1) +
scale_x_continuous(breaks = seq(1,7), labels = category_labels) +
xlab('cover category') +
ylab('Euclidean distance between MFCCs for original and cover')
#ggsave('mfccs/mfccs_exploration/mfccs_by_category.png', width = 7, height = 5)
summary(lm(mfccs_dist ~ factor(cover_category), data))
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(magrittr)
p <- read_csv('../data/combined/multi-level_precision.csv')
s <- read_csv('../data/combined/multi-level_sensitivity.csv')
f <- read_csv('../data/combined/multi-level_f.csv')
View(p)
p <- read_csv('../data/combined/multi-level_precision.csv', rownames = FALSE)
p <- read_csv('../data/combined/multi-level_precision.csv', rownames_included = FALSE)
p <- read_csv('../data/combined/multi-level_precision.csv')
s <- read_csv('../data/combined/multi-level_sensitivity.csv')
f <- read_csv('../data/combined/multi-level_f.csv')
p <- read_csv('../data/combined/multi-level_precision.csv')
s <- read_csv('../data/combined/multi-level_sensitivity.csv')
f <- read_csv('../data/combined/multi-level_f.csv')
p %<>% mutate('...1' = NULL)
s %<>% mutate('...1' = NULL)
f %<>% mutate('...1' = NULL)
library(tidyverse)
library(magrittr)
library(nparLD)
select <- dplyr::select
p %<>% pivot_longer(names_to = 'level', values_to = 'value')
p %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
p <- read_csv('../data/combined/multi-level_precision.csv', show_col_types = FALSE)
s <- read_csv('../data/combined/multi-level_sensitivity.csv', show_col_types = FALSE)
f <- read_csv('../data/combined/multi-level_f.csv', show_col_types = FALSE)
p %<>% mutate('...1' = NULL)
s %<>% mutate('...1' = NULL)
f %<>% mutate('...1' = NULL)
# pandas saved an index that we don't really need...
p %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
s %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
f %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
View(s)
View(f)
attach(p)
f1.ld.f2(value, time1=scramble, time2 = level, group=Musician, subject=sub,
time1.name="condition", time2.name="level", group.name="expertise",
description=FALSE)$ANOVA.test
attach(p)
f1.ld.f2(value, time1=scramble, time2=level, group=Musician, subject=sub,
time1.name="condition", time2.name="level", group.name="expertise")#,
p %<>% mutate(sub = ifelse(Musician == 'yes', sub, sub + 45))
p <- read_csv('../data/combined/multi-level_precision.csv', show_col_types = FALSE)
s <- read_csv('../data/combined/multi-level_sensitivity.csv', show_col_types = FALSE)
f <- read_csv('../data/combined/multi-level_f.csv', show_col_types = FALSE)
p %<>% mutate('...1' = NULL)
s %<>% mutate('...1' = NULL)
f %<>% mutate('...1' = NULL)
# pandas saved an index that we don't really need...
p %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
s %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
f %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
p %<>% mutate(sub = ifelse('Musician' == 'yes', sub, sub + 45))
p <- read_csv('../data/combined/multi-level_precision.csv', show_col_types = FALSE)
s <- read_csv('../data/combined/multi-level_sensitivity.csv', show_col_types = FALSE)
f <- read_csv('../data/combined/multi-level_f.csv', show_col_types = FALSE)
p %<>% mutate('...1' = NULL)
s %<>% mutate('...1' = NULL)
f %<>% mutate('...1' = NULL)
# pandas saved an index that we don't really need...
p %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
s %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
f %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
p %<>% mutate(sub_group = ifelse(Musician == 'Yes', sub, sub + 45))
p <- read_csv('../data/combined/multi-level_precision.csv', show_col_types = FALSE)
s <- read_csv('../data/combined/multi-level_sensitivity.csv', show_col_types = FALSE)
f <- read_csv('../data/combined/multi-level_f.csv', show_col_types = FALSE)
p %<>% mutate('...1' = NULL)
s %<>% mutate('...1' = NULL)
f %<>% mutate('...1' = NULL)
# pandas saved an index that we don't really need...
p %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
s %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
f %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
p %<>% mutate(sub = ifelse(Musician == 'Yes', sub, sub + 45))
s %<>% mutate(sub = ifelse(Musician == 'Yes', sub, sub + 45))
f %<>% mutate(sub = ifelse(Musician == 'Yes', sub, sub + 45))
attach(p)
f1.ld.f2(value, time1=scramble, time2=level, group=Musician, subject=sub,
time1.name="condition", time2.name="level", group.name="expertise")#,
#description=FALSE)$ANOVA.test
attach(p)
f1.ld.f2(value, time1=scramble, time2=level, group=Musician, subject=sub,
time1.name="condition", time2.name="level", group.name="expertise",
description=FALSE)$ANOVA.test
attach(s)
f1.ld.f2(value, time1=scramble, time2=level, group=Musician, subject=sub,
time1.name="condition", time2.name="level", group.name="expertise",
description=FALSE)$ANOVA.test
attach(f)
f1.ld.f2(value, time1=scramble, time2=level, group=Musician, subject=sub,
time1.name="condition", time2.name="level", group.name="expertise",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(p$value, p$level,
p.adjust.method = "bonferroni", paired=TRUE)
ld.f2(value, time1=scramble, time2=level, subject=sub,
time1.name="condition", time2.name="level",
description=FALSE)$ANOVA.test
p_I <- filter(p, scramble == 'Intact')
#ld.f1()
#pairwise.wilcox.test(p_I$value, p_I$level,
#                     p.adjust.method = "bonferroni", paired=TRUE)
View(p_I)
p_I <- filter(p, scramble == 'Intact')
ld.f1(value, time=level, subject=sub, time.name="condition",
description=FALSE)$ANOVA.test
p_I <- filter(p, scramble == 'Intact')
attach(p_I)
ld.f1(value, time=level, subject=sub, time.name="condition",
description=FALSE)$ANOVA.test
#ld.f1()
#pairwise.wilcox.test(p_I$value, p_I$level,
#                     p.adjust.method = "bonferroni", paired=TRUE)
p_I <- filter(p, scramble == 'Intact')
attach(p_I)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
#ld.f1()
#pairwise.wilcox.test(p_I$value, p_I$level,
#                     p.adjust.method = "bonferroni", paired=TRUE)
p_I <- filter(p, scramble == 'Intact')
attach(p_I)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(p_I$value, p_I$level,
p.adjust.method = "bonferroni", paired=TRUE)
p_I <- filter(p, scramble == 'Intact')
attach(p_I)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(p_I$value, p_I$level,
p.adjust.method = "bonferroni", paired=TRUE)
p_8B <- filter(p, scramble == '8B')
attach(p_8B)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(p_8B$value, p_8B$level,
p.adjust.method = "bonferroni", paired=TRUE)
pairwise.wilcox.test(p_I$value, p_I$level,
p.adjust.method = "bonferroni", paired=TRUE)
p_2B <- filter(p, scramble == '2B')
attach(p_2B)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
p_1B <- filter(p, scramble == '1B')
attach(p_1B)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
attach(s)
ld.f2(value, time1=scramble, time2=level, subject=sub,
time1.name="condition", time2.name="level",
description=FALSE)$ANOVA.test
s_I <- filter(s, scramble == 'Intact')
attach(s_I)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
s_8B <- filter(s, scramble == '8B')
attach(s_8B)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(s_8B$value, s_8B$level,
p.adjust.method = "bonferroni", paired=TRUE)
s_2B <- filter(s, scramble == '2B')
attach(s_2B)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(s_2B$value, s_2B$level,
p.adjust.method = "bonferroni", paired=TRUE)
s_1B <- filter(s, scramble == '1B')
attach(s_1B)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(s_1B$value, s_1B$level,
p.adjust.method = "bonferroni", paired=TRUE)
attach(f)
ld.f2(value, time1=scramble, time2=level, subject=sub,
time1.name="condition", time2.name="level",
description=FALSE)$ANOVA.test
f_I <- filter(f, scramble == 'Intact')
attach(f_I)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
f_8B <- filter(f, scramble == '8B')
attach(f_8B)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(f_8B$value, f_8B$level,
p.adjust.method = "bonferroni", paired=TRUE)
f_2B <- filter(f, scramble == '2B')
attach(f_2B)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(f_2B$value, f_2B$level,
p.adjust.method = "bonferroni", paired=TRUE)
f_1B <- filter(f, scramble == '1B')
attach(f_1B)
ld.f1(value, time=level, subject=sub, time.name="level",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(f_1B$value, f_1B$level,
p.adjust.method = "bonferroni", paired=TRUE)
attach(p_I)
f1.ld.f1(value, time=level, subject=sub, group=Musician,
time.name="level", group.name="expertise",
description=FALSE)$ANOVA.test
attach(p_8B)
f1.ld.f1(value, time=level, subject=sub, group=Musician,
time.name="level", group.name="expertise",
description=FALSE)$ANOVA.test
attach(p_I)
f1.ld.f1(value, time=level, subject=sub, group=Musician,
time.name="level", group.name="expertise",
description=FALSE)$ANOVA.test
knitr::opts_chunk$set(echo = FALSE)
f_16 <- filter(f, level == '16')
f_16 <- filter(f, level == 16)
library(tidyverse)
library(magrittr)
library(nparLD)
select <- dplyr::select
p <- read_csv('../data/combined/multi-level_precision.csv', show_col_types = FALSE)
s <- read_csv('../data/combined/multi-level_sensitivity.csv', show_col_types = FALSE)
f <- read_csv('../data/combined/multi-level_f.csv', show_col_types = FALSE)
p %<>% mutate('...1' = NULL)
s %<>% mutate('...1' = NULL)
f %<>% mutate('...1' = NULL)
# pandas saved an index that we don't really need...
p %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
s %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
f %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
p %<>% mutate(sub = ifelse(Musician == 'Yes', sub, sub + 45))
s %<>% mutate(sub = ifelse(Musician == 'Yes', sub, sub + 45))
f %<>% mutate(sub = ifelse(Musician == 'Yes', sub, sub + 45))
f_16 <- filter(f, level == 16)
attach(f_16)
ld.f1(value, time=scramble, subject=sub, time.name="condition",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(f_16$value, f_16$condition,
p.adjust.method = "bonferroni", paired=TRUE)
pairwise.wilcox.test(f_16$value, f_16$scramble,
p.adjust.method = "bonferroni", paired=TRUE)
f_8 <- filter(f, level == 8)
attach(f_8)
ld.f1(value, time=scramble, subject=sub, time.name="condition",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(f_8$value, f_8$scramble,
p.adjust.method = "bonferroni", paired=TRUE)
f_5 <- filter(f, level == 5)
attach(f_5)
ld.f1(value, time=scramble, subject=sub, time.name="condition",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(f_5$value, f_5$scramble,
p.adjust.method = "bonferroni", paired=TRUE)
f_4 <- filter(f, level == 4)
attach(f_4)
ld.f1(value, time=scramble, subject=sub, time.name="condition",
description=FALSE)$ANOVA.test
pairwise.wilcox.test(f_4$value, f_4$scramble,
p.adjust.method = "bonferroni", paired=TRUE)
f_3 <- filter(f, level == 3)
attach(f_3)
ld.f1(value, time=scramble, subject=sub, time.name="condition",
description=FALSE)$ANOVA.test
f_2 <- filter(f, level == 2)
attach(f_2)
ld.f1(value, time=scramble, subject=sub, time.name="condition",
description=FALSE)$ANOVA.test
f_1 <- filter(f, level == 1)
attach(f_1)
ld.f1(value, time=scramble, subject=sub, time.name="condition",
description=FALSE)$ANOVA.test
library(readr)
rms <- read_csv("Documents/cover_songs_fMRI/stimulus selection/main/rms.csv")
View(rms)
library(tidyverse)
library(magrittr)
rms %<>% separate_wider_delim(., clip, names = c(title, orig_cov))
rms %<>% separate_wider_delim(., clip, names = c(title, orig_cov), delim = '_')
rms %<>% separate_wider_delim(., clip, names = c('title', 'orig_cov'), delim = '_')
rms <- read_csv("Documents/cover_songs_fMRI/stimulus selection/main/rms.csv")
rms %<>% separate_wider_delim(., clip, names = c('title', 'orig_cov'), delim = '_')
rms_wider <- rms %>% pivot_wider(id_cols = title, names_from = orig_cov, values_from = rms)
View(rms_wider)
rms_wider %<>% rename(original = original.wav) %>% rename(cover = cover.wav)
rms_wider %<>% mutate(difference = original - cover)
write_csv(rms_wider, 'rms_differences.csv')
getwd()
getwd()
setwd('/Users/rcassan2/Documents/GitHub/Scramble_Music/analysis/')
getwd()
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(readxl) # version 1.4.3
select <- dplyr::select # make sure we're using the dplyr version of the select function
# data files were combined and columns were selected using pandas
# load the combined file
data <- read_csv("../data/E1-E2-E4/raw_combined.csv")
# load the file with years of musical experience from the subject info folder
data_yrs <- read_excel("../data/subject_info/E124_years_musical_exp.xlsx")
# load the subject list
subs <- read_excel('../data/subject_info/E124_sub_ids.xlsx')
# extract the main task, remove practice task and instruction
memory <- data %>%
filter(grepl('Memory', Task_Name)) %>%
filter(!grepl('Practice', Task_Name)) %>%
filter(!grepl('Instructions', Task_Name)) %>%
mutate(scramble = ifelse(!is.na(scramble_m_1), scramble_m_1,
ifelse(!is.na(scramble_m_2), scramble_m_2, scramble_m_3))) %>%
select(c(exp_subject_id, Trial_Nr, response, scramble))
prediction <- data %>%
filter(grepl('Prediction', Task_Name)) %>%
filter(!grepl('Practice', Task_Name)) %>%
filter(!grepl('Instructions', Task_Name)) %>%
mutate(scramble = ifelse(!is.na(scramble_p_1), scramble_p_1,
ifelse(!is.na(scramble_p_2), scramble_p_2, scramble_p_3))) %>%
select(c(exp_subject_id, Trial_Nr, response, scramble))
categorization <- data %>%
filter(grepl('Categorization', Task_Name)) %>%
filter(!grepl('Practice', Task_Name)) %>%
filter(!grepl('Instructions', Task_Name)) %>%
mutate(scramble = ifelse(!is.na(scramble_cat_1), scramble_cat_1,
ifelse(!is.na(scramble_cat_3), scramble_cat_3, scramble_catseg_4))) %>%
select(c(exp_subject_id, Trial_Nr, response_seg2, scramble)) %>%
rename(response = response_seg2)
# get the task-specific the subject lists
memory_subs <- select(subs, c("Memory sub ids", "Musician?...2" )) %>%
rename("Musician" = "Musician?...2")
prediction_subs <- select(subs, c("Prediction sub ids", "Musician?...5" ))%>%
rename("Musician" = "Musician?...5") %>%
na.omit()
categorization_subs <- select(subs, c("Categorization sub ids", "Musician?...8" )) %>%
rename("Musician" = "Musician?...8")
# join Musician information and years of musical experience, if available
memory %<>%
left_join(., memory_subs, by = join_by('exp_subject_id' == 'Memory sub ids'), "many-to-one") %>%
left_join(., data_yrs, by = join_by('exp_subject_id' == 'LabvancedID')) %>%
mutate(Musician = as.factor(Musician))
prediction %<>%
left_join(., prediction_subs, by = join_by('exp_subject_id' == 'Prediction sub ids'), "many-to-one") %>%
left_join(., data_yrs, by = join_by('exp_subject_id' == 'LabvancedID')) %>%
mutate(Musician = as.factor(Musician))
categorization %<>%
left_join(., categorization_subs, by = join_by('exp_subject_id' == 'Categorization sub ids'), "many-to-one") %>%
left_join(., data_yrs, by = join_by('exp_subject_id' == 'LabvancedID')) %>%
mutate(Musician = as.factor(Musician))
# there are more subjects than who we include
print(length(unique(memory$exp_subject_id))) # 129
print(length(unique(prediction$exp_subject_id))) # 123
print(length(unique(categorization$exp_subject_id))) # 122
memory %<>% filter(!is.na(Musician))
prediction %<>% filter(!is.na(Musician))
categorization %<>% filter(!is.na(Musician))
# check again
print(length(unique(memory$exp_subject_id))) # 102
print(length(unique(prediction$exp_subject_id))) # 105
print(length(unique(categorization$exp_subject_id))) # 106
print(length(unique(filter(memory, Musician == 'Yes')$exp_subject_id))) # 52 / 102 are musicians
print(length(unique(filter(prediction, Musician == 'Yes')$exp_subject_id))) # 53 / 105 are musicians
print(length(unique(filter(categorization, Musician == 'Yes')$exp_subject_id))) # 54 / 106 are musicians
# save the wrangled data
write_csv(memory, '../data/E1-E2-E4/memory.csv')
write_csv(prediction, '../data/E1-E2-E4/prediction.csv')
write_csv(categorization, '../data/E1-E2-E4/categorization.csv')

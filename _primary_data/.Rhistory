print(contrasts(data$scramble))
prior_intercept <- set_prior('normal(log(0.8 / (1 - 0.8)), 1)', class = 'Intercept')
prior_mus <- set_prior('normal(-0.25, 1)', coef = 'Musician1')
prior_scramble2B <- set_prior('normal(-0.1, 1)', coef = 'scramble2')
prior_scramble1B <- set_prior('normal(-0.2, 1)', coef = 'scramble3')
prior_int2B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble2')
prior_int1B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble3')
mus_scram <- brm(response ~ Musician + scramble + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus,
prior_scramble2B, prior_scramble1B),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_mus_scram')
plot(mus_scram)
print(summary(mus_scram), digits = 4)
emm_mus_scram_s <- emmeans(mus_scram, specs = "scramble")
summary(emm_mus_scram_s)
contrast(emm_mus_scram_s, method = "pairwise")
emm_mus_scram_ms <- emmeans(mus_scram, specs = c("Musician", "scramble"))
summary(emm_mus_scram_ms)
contrast(emm_mus_scram_ms, method = "pairwise")
main_BF <- describe_posterior(mus_scram,
estimate = "median", dispersion = TRUE,
ci = .95, ci_method = "HDI",
test = c("bayes_factor"))
print(main_BF, digits = 4)
mus_only <- brm(response ~ Musician + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_mus_only')
plot(mus_only)
print(summary(mus_only), digits = 4)
BF_scramble <- bayes_factor(mus_scram, mus_only)
print(BF_scramble)
mus_scram_int <- brm(response ~ Musician*scramble + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus,
prior_scramble2B, prior_scramble1B,
prior_int2B, prior_int1B),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_mus_scram_int')
plot(mus_scram_int)
print(summary(mus_scram_int), digits = 4)
BF_int <- bayes_factor(mus_scram_int, mus_scram)
print(BF_int)
calculate_prob_from_logodds <- function(logodds) {
return(exp(logodds) / (1 + exp(logodds)))
}
posterior_est <- as.data.frame(emm_mus_scram_ms)
ggplot() +
geom_col(aes(x = scramble, y = calculate_prob_from_logodds(emmean), fill = Musician),
data = posterior_est,
position = "dodge") +
geom_errorbar(aes(x = scramble,
ymin = calculate_prob_from_logodds(lower.HPD),
ymax = calculate_prob_from_logodds(upper.HPD),
fill = Musician),
data = posterior_est, position = position_dodge(width = 0.9), width = 0.2) +
geom_hline(yintercept = 0.5, linetype = "dotted", color = "black", linewidth = 1) +
theme_gray(base_size = 16) +
scale_x_discrete(limits = rev) +
ylim(0, 0.85) +
xlab('Scramble Level') +
ylab('Posterior Distribution of\nProportion Correct (Prediction)') +
scale_fill_discrete(name="", labels=c('Musicians', 'Non-musicians')) +
theme(legend.text = element_text(size = 12))
ggsave('../figures/Fig2B_prediction.png', width = 7, height = 5)
data1B <- filter(data, scramble == '1B')
get_prior(response ~ 1 + (1 | exp_subject_id), data = data1B)
only1B <- brm(response ~ 1 + (1 | exp_subject_id), data = data1B,
family = bernoulli(),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_only1B')
plot(only1B)
print(summary(only1B), digits = 4)
bf_pointnull(only1B, null = 0)
data_no1B <- filter(data, scramble != '1B')
get_prior(response ~ Musician + scramble + (1 | exp_subject_id), data = data_no1B)
no1B <- brm(response ~ Musician + scramble + (1 | exp_subject_id), data = data_no1B,
family = bernoulli(),
prior = c(
prior_intercept, prior_mus, set_prior('normal(-0.1, 1)', coef = 'scramble1')
),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_no1B')
plot(no1B)
print(summary(no1B), digits = 4)
get_prior(response ~ Musician*scramble + (1 | exp_subject_id), data = data_no1B)
no1B_int <- brm(response ~ Musician*scramble + (1 | exp_subject_id), data = data_no1B,
family = bernoulli(),
prior = c(
prior_intercept, prior_mus,
set_prior('normal(-0.1, 1)', coef = 'scramble1'),
set_prior('normal(0, 1)', coef = 'Musician1:scramble1')
),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_no1B_int')
plot(no1B_int)
print(summary(no1B_int), digits = 4)
BF_no1B_int <- bayes_factor(no1B_int, no1B)
print(BF_no1B_int)
yrs_exp <- data %>%
filter(!is.na(yrs_mus_exp)) %>%
group_by(exp_subject_id, scramble, yrs_mus_exp) %>%
summarize(count = n(),
n_correct = sum(response),
accuracy = n_correct / count)
these_priors <- c(
set_prior('normal(0.75, 0.1)', class = 'Intercept'),
set_prior('normal(-0.1, 0.1)', coef = 'scramble2'),
set_prior('normal(-0.2, 0.1)', coef = 'scramble3'),
set_prior('normal(0, 0.1)', coef = 'yrs_mus_exp')
)
years_mus_scram <- brm(accuracy ~ scramble + yrs_mus_exp + (1|exp_subject_id), data = yrs_exp,
prior = these_priors,
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_years')
plot(years_mus_scram)
print(summary(years_mus_scram), digits = 4)
years_mus <- brm(accuracy ~ yrs_mus_exp + (1|exp_subject_id), data = yrs_exp,
prior = c(
set_prior('normal(0.75, 0.1)', class = 'Intercept'),
set_prior('normal(0, 0.1)', coef = 'yrs_mus_exp')),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_years_null')
plot(years_mus)
print(summary(years_mus), digits = 4)
yrs_BF <- describe_posterior(years_mus_scram,
estimate = "median", dispersion = TRUE,
ci = .95, ci_method = "HDI",
test = c("bayes_factor"))
print(yrs_BF, digits = 4)
yrs_null_BF <- describe_posterior(years_mus,
estimate = "median", dispersion = TRUE,
ci = .95, ci_method = "HDI",
test = c("bayes_factor"))
print(yrs_null_BF, digits = 4)
contrasts(data$Musician)
main_BF <- describe_posterior(mus_scram,
estimate = "median", dispersion = TRUE,
ci = .95, ci_method = "HDI",
test = c("bayes_factor"))
print(main_BF, digits = 5)
View(main_BF)
exp(main_BF$log_BF)
plot(years_mus_scram)
print(summary(years_mus_scram), digits = 4)
plot(years_mus_scram)
print(summary(years_mus_scram), digits = 5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(brms) # version 2.22.0
library(bayestestR) # version 0.15.0
library(emmeans) # version 1.10.0
set.seed(15000)
data <- read_csv('../data/prediction.csv')
data %<>%
mutate(exp_subject_id = as.factor(exp_subject_id),
response = ifelse(response == 'Correct', TRUE, FALSE),
scramble = factor(scramble, levels = c('8B', '2B', '1B')),
Musician = factor(Musician, levels = c('Yes', 'No'))) %>%
filter(!is.na(response))
contrasts(data$scramble) <- contr.treatment(3)
print(contrasts(data$scramble))
contrasts(data$Musician)
prior_intercept <- set_prior('normal(log(0.8 / (1 - 0.8)), 1)', class = 'Intercept')
prior_mus <- set_prior('normal(-0.25, 1)', coef = 'Musician1')
prior_scramble2B <- set_prior('normal(-0.1, 1)', coef = 'scramble2')
prior_scramble1B <- set_prior('normal(-0.2, 1)', coef = 'scramble3')
prior_int2B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble2')
prior_int1B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble3')
mus_scram <- brm(response ~ Musician + scramble + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus,
prior_scramble2B, prior_scramble1B),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_mus_scram')
plot(mus_scram)
print(summary(mus_scram), digits = 4)
emm_mus_scram_s <- emmeans(mus_scram, specs = "scramble")
summary(emm_mus_scram_s)
contrast(emm_mus_scram_s, method = "pairwise")
emm_mus_scram_ms <- emmeans(mus_scram, specs = c("Musician", "scramble"))
summary(emm_mus_scram_ms)
contrast(emm_mus_scram_ms, method = "pairwise")
main_BF <- describe_posterior(mus_scram,
estimate = "median", dispersion = TRUE,
ci = .95, ci_method = "HDI",
test = c("bayes_factor"))
print(main_BF, digits = 5)
mus_only <- brm(response ~ Musician + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_mus_only')
plot(mus_only)
print(summary(mus_only), digits = 4)
BF_scramble <- bayes_factor(mus_scram, mus_only)
print(BF_scramble)
mus_scram_int <- brm(response ~ Musician*scramble + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus,
prior_scramble2B, prior_scramble1B,
prior_int2B, prior_int1B),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_mus_scram_int')
plot(mus_scram_int)
print(summary(mus_scram_int), digits = 4)
BF_int <- bayes_factor(mus_scram_int, mus_scram)
print(BF_int)
calculate_prob_from_logodds <- function(logodds) {
return(exp(logodds) / (1 + exp(logodds)))
}
posterior_est <- as.data.frame(emm_mus_scram_ms)
ggplot() +
geom_col(aes(x = scramble, y = calculate_prob_from_logodds(emmean), fill = Musician),
data = posterior_est,
position = "dodge") +
geom_errorbar(aes(x = scramble,
ymin = calculate_prob_from_logodds(lower.HPD),
ymax = calculate_prob_from_logodds(upper.HPD),
fill = Musician),
data = posterior_est, position = position_dodge(width = 0.9), width = 0.2) +
geom_hline(yintercept = 0.5, linetype = "dotted", color = "black", linewidth = 1) +
theme_gray(base_size = 16) +
scale_x_discrete(limits = rev) +
ylim(0, 0.85) +
xlab('Scramble Level') +
ylab('Posterior Distribution of\nProportion Correct (Prediction)') +
scale_fill_discrete(name="", labels=c('Musicians', 'Non-musicians')) +
theme(legend.text = element_text(size = 12))
ggsave('../figures/Fig2B_prediction.png', width = 7, height = 5)
data1B <- filter(data, scramble == '1B')
get_prior(response ~ 1 + (1 | exp_subject_id), data = data1B)
only1B <- brm(response ~ 1 + (1 | exp_subject_id), data = data1B,
family = bernoulli(),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_only1B')
plot(only1B)
print(summary(only1B), digits = 4)
bf_pointnull(only1B, null = 0)
data_no1B <- filter(data, scramble != '1B')
get_prior(response ~ Musician + scramble + (1 | exp_subject_id), data = data_no1B)
no1B <- brm(response ~ Musician + scramble + (1 | exp_subject_id), data = data_no1B,
family = bernoulli(),
prior = c(
prior_intercept, prior_mus, set_prior('normal(-0.1, 1)', coef = 'scramble1')
),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_no1B')
plot(no1B)
print(summary(no1B), digits = 4)
get_prior(response ~ Musician*scramble + (1 | exp_subject_id), data = data_no1B)
no1B_int <- brm(response ~ Musician*scramble + (1 | exp_subject_id), data = data_no1B,
family = bernoulli(),
prior = c(
prior_intercept, prior_mus,
set_prior('normal(-0.1, 1)', coef = 'scramble1'),
set_prior('normal(0, 1)', coef = 'Musician1:scramble1')
),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_no1B_int')
plot(no1B_int)
print(summary(no1B_int), digits = 4)
BF_no1B_int <- bayes_factor(no1B_int, no1B)
print(BF_no1B_int)
yrs_exp <- data %>%
filter(!is.na(yrs_mus_exp)) %>%
group_by(exp_subject_id, scramble, yrs_mus_exp) %>%
summarize(count = n(),
n_correct = sum(response),
accuracy = n_correct / count)
these_priors <- c(
set_prior('normal(0.75, 0.1)', class = 'Intercept'),
set_prior('normal(-0.1, 0.1)', coef = 'scramble2'),
set_prior('normal(-0.2, 0.1)', coef = 'scramble3'),
set_prior('normal(0, 0.1)', coef = 'yrs_mus_exp')
)
years_mus_scram <- brm(accuracy ~ scramble + yrs_mus_exp + (1|exp_subject_id), data = yrs_exp,
prior = these_priors,
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_years')
plot(years_mus_scram)
print(summary(years_mus_scram), digits = 5)
years_mus <- brm(accuracy ~ yrs_mus_exp + (1|exp_subject_id), data = yrs_exp,
prior = c(
set_prior('normal(0.75, 0.1)', class = 'Intercept'),
set_prior('normal(0, 0.1)', coef = 'yrs_mus_exp')),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E2_years_null')
plot(years_mus)
print(summary(years_mus), digits = 4)
yrs_BF <- describe_posterior(years_mus_scram,
estimate = "median", dispersion = TRUE,
ci = .95, ci_method = "HDI",
test = c("bayes_factor"))
print(yrs_BF, digits = 4)
View(yrs_BF)
exp(yrs_BF$log_BF)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(rstatix) # version 0.7.2
library(brms) # version 2.22.0
library(bayestestR) # version 0.15.0
library(emmeans) # version 1.10.0
set.seed(15000)
data <- read_csv("../data/response_rate_by_sub.csv")
data %<>% mutate(Musician = factor(Musician, levels = c('Yes', 'No')),
scramble = factor(scramble, levels = c('Intact', '8B', '2B', '1B')))
contrasts(data$scramble) <- contr.treatment(4)
data %>%
group_by(Musician, scramble) %>%
shapiro_test(mean_response_rate)
data %>%
ggplot(aes(x = scramble, y = mean_response_rate, fill = Musician)) +
geom_bar(position = "dodge", stat = "summary", fun = mean) +
geom_errorbar(position = position_dodge(width = 0.9), width = 0.2, stat = "summary") +
geom_point(position = position_jitterdodge(jitter.width = 0.1), alpha = 0.1) +
theme_gray(base_size = 16) +
xlab('Scramble Level') +
ylab('Response Rate (per Minute)') +
scale_fill_discrete(name="", labels=c('Musicians', 'Non-musicians')) +
theme(legend.text = element_text(size = 12))
data %<>% mutate(log_rate = log(1 + mean_response_rate))
# add 1 so rates that are zero transform to 0 (rather than negative infinity)
data %>%
group_by(Musician, scramble) %>%
shapiro_test(log_rate)
data %>%
ggplot(aes(x = scramble, y = log_rate, fill = Musician)) +
geom_bar(position = "dodge", stat = "summary", fun = mean) +
geom_errorbar(position = position_dodge(width = 0.9), width = 0.2, stat = "summary") +
geom_point(position = position_jitterdodge(jitter.width = 0.1), alpha = 0.1) +
theme_gray(base_size = 16) +
xlab('Scramble Level') +
ylab('Log of Response Rate (per Minute)') +
scale_fill_discrete(name="", labels=c('Musicians', 'Non-musicians')) +
theme(legend.text = element_text(size = 12))
#ggsave('rate.png', width = 7, height = 5)
get_prior(log_rate ~ Musician + scramble + (1|exp_subject_id), data = data)
these_priors <- c(
set_prior('normal(0, 0.5)', coef = "Musician1"), # don't necessarily expect a difference between groups
set_prior('normal(0, 0.5)', coef = "scramble2"), # intact vs 8B
set_prior('normal(0, 0.5)', coef = "scramble3"), # intact vs 2B
set_prior('normal(0, 0.5)', coef = "scramble4") # intact vs 1B
)
brm_log_rate <- brm(log_rate ~ Musician + scramble + (1|exp_subject_id), data = data,
prior = these_priors,
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E3_log_rate')
plot(brm_log_rate)
print(summary(brm_log_rate), digits = 4)
emm_log_rate <- emmeans(brm_log_rate, specs = c("scramble", "Musician"))
summary(emm_log_rate)
emm_log_rate_s <- emmeans(brm_log_rate, specs = "scramble")
summary(emm_log_rate_s)
contrast(emm_log_rate_s, method = "pairwise")
log_rate_BF <- describe_posterior(brm_log_rate,
estimate = "median", dispersion = TRUE,
ci = .95, ci_method = "HDI",
test = c("bayes_factor"))
print(log_rate_BF, digits = 4)
brm_log_rate_null <- brm(log_rate ~ Musician + (1|exp_subject_id), data = data,
prior = set_prior('normal(0, 0.5)', class = 'b'),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E3_log_rate_null')
plot(brm_log_rate_null)
print(summary(brm_log_rate_null), digits = 4)
BF_log_rate <- bayes_factor(brm_log_rate, brm_log_rate_null)
print(BF_log_rate)
View(log_rate_BF)
exp(log_rate_BF$log_BF)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(rstatix) # version 0.7.2
library(brms) # version 2.22.0
library(bayestestR) # version 0.15.0
library(emmeans) # version 1.10.0
set.seed(15000)
data <- read_csv('../data/alignment_original.csv', show_col_types = FALSE)
length(unique(filter(data, Musician == 'Yes')$sub))
length(unique(filter(data, Musician == 'No')$sub))
data %<>% mutate(sub = ifelse(Musician == 'Yes', sub, sub + 49))
data %<>% pivot_longer(cols = -c(Musician, sub, scramble),
names_to = 'level', values_to = 'value')
data_nested <- data %>%
filter(!level %in% c(1,3,5))
data %<>% mutate(
Musician = factor(Musician, levels = c('Yes', 'No')),
scramble = factor(scramble, levels = c('Intact', '8B', '2B', '1B')),
level = factor(level, levels = c(1,2,3,4,5,8,16), ordered = TRUE)
)
contrasts(data$scramble) <- contr.treatment(4) # Intact as reference
contrasts(data$level) <- contr.treatment(7, base = 6) # 8-bar as reference
data_nested %<>% mutate(
Musician = factor(Musician, levels = c('Yes', 'No')),
scramble = factor(scramble, levels = c('Intact', '8B', '2B', '1B')),
level = factor(level, levels = c(2,4,8,16), ordered = TRUE)
)
contrasts(data_nested$scramble) <- contr.treatment(4) # Intact as reference
contrasts(data_nested$level) <- contr.treatment(4, base = 3) # 8-bar as reference
nested_2way_musScram <- brm(value ~ scramble + scramble:Musician + (1|sub), data = data_nested,
prior = c(
set_prior('normal(0, 0.1)', class = 'b'), # all interactions
set_prior('normal(0.1, 0.1)', coef = 'scramble2'),
set_prior('normal(-0.1, 0.1)', coef = 'scramble3'),
set_prior('normal(-0.1, 0.1)', coef = 'scramble4')
),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E3_alignment_2way_musScramInt')
nested_2way_musLevel <- brm(value ~ level + level:Musician + (1|sub), data = data_nested,
prior = c(
set_prior('normal(0, 0.1)', class = 'b'), # all interactions
set_prior('normal(-0.2, 0.1)', coef = 'level1'),
set_prior('normal(-0.1, 0.1)', coef = c('level2', 'level4'))
),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E3_alignment_2way_musLevelInt')
nested_justLevel <- brm(value ~ level + (1|sub), data = data_nested,
prior = c(
set_prior('normal(-0.2, 0.1)', coef = 'level1'),
set_prior('normal(-0.1, 0.1)', coef = c('level2', 'level4'))
),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E3_alignment_justLevel')
nested_justScram <- brm(value ~ scramble + (1|sub), data = data_nested,
prior = c(
set_prior('normal(0.1, 0.1)', coef = 'scramble2'),
set_prior('normal(-0.1, 0.1)', coef = 'scramble3'),
set_prior('normal(-0.1, 0.1)', coef = 'scramble4')
),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E3_alignment_justScram')
BF_nested_2way_musScram <- bayes_factor(nested_2way_musScram, nested_justScram)
print(BF_nested_2way_musScram)
BF_nested_2way_musLevel <- bayes_factor(nested_2way_musLevel, nested_justLevel)
View(BF_nested_2way_musScram)
print(BF_nested_2way_musLevel)
View(BF_nested_2way_musScram)
View(BF_nested_2way_musLevel)
data1B <- filter(data, scramble == '1B')
levels1B_null <- brm(value ~ 1 + (1|sub), data = data1B,
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E3_alignment_1B_null')
levels1B <- brm(value ~ level + (1|sub), data = data1B,
prior = c(
set_prior('normal(-0.2, 0.1)', coef = c('level1', 'level2', 'level3', 'level5')),
set_prior('normal(-0.1, 0.1)', coef = c('level4', 'level7'))
),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E3_alignment_1B')
plot(levels1B)
print(summary(levels1B), digits = 4)
BF_1B_level <- bayes_factor(levels1B, levels1B_null)
print(BF_1B_level)
View(BF_1B_level)
dataI <- filter(data, scramble == 'Intact')
levelsI_null <- brm(value ~ 1 + (1|sub), data = dataI,
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E3_alignment_Intact_null')
levelsI <- brm(value ~ level + (1|sub), data = dataI,
prior = c(
set_prior('normal(-0.2, 0.1)', coef = c('level1', 'level2', 'level3', 'level5')),
set_prior('normal(-0.1, 0.1)', coef = c('level4', 'level7'))
),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E3_alignment_Intact')
BF_I_level <- bayes_factor(levelsI, levelsI_null)
print(BF_I_level)
View(BF_I_level)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # version 2.0.0
library(magrittr) # version 2.0.3
library(brms) # version 2.22.0
library(bayestestR) # version 0.15.0
library(emmeans) # version 1.10.0
set.seed(15000)
data <- read_csv('../data/categorization.csv')
data %<>%
mutate(scramble = ifelse(scramble == 'intact', 'Intact', scramble)) %>%
mutate(exp_subject_id = as.factor(exp_subject_id),
response = ifelse(response == 'Correct', TRUE, FALSE),
scramble = factor(scramble, levels = c('Intact', '8B', '2B', '1B')),
Musician = factor(Musician, levels = c('Yes', 'No'))) %>%
filter(!is.na(response))
contrasts(data$scramble) <- contr.treatment(4)
print(contrasts(data$scramble))
prior_intercept <- set_prior('normal(log(0.65 / (1 - 0.65)), 1)', class = 'Intercept')
prior_mus <- set_prior('normal(-0.25, 1)', coef = 'Musician1')
prior_scramble8B <- set_prior('normal(-0.1, 1)', coef = 'scramble2')
prior_scramble2B <- set_prior('normal(-0.2, 1)', coef = 'scramble3')
prior_scramble1B <- set_prior('normal(-0.3, 1)', coef = 'scramble4')
prior_int8B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble2')
prior_int2B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble3')
prior_int1B <- set_prior('normal(0, 1)', coef = 'Musician1:scramble4')
mus_scram <- brm(response ~ Musician + scramble + (1 | exp_subject_id), data = data,
family = bernoulli(),
prior = c(prior_intercept, prior_mus,
prior_scramble8B, prior_scramble2B, prior_scramble1B),
save_pars = save_pars(all = TRUE), iter = 5000,
file = '../models/E4_mus_scram')
main_BF <- describe_posterior(mus_scram,
estimate = "median", dispersion = TRUE,
ci = .95, ci_method = "HDI",
test = c("bayes_factor"))
print(main_BF, digits = 4)
View(main_BF)
exp(main_BF$log_BF)
